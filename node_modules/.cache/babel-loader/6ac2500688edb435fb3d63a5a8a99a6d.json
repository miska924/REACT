{"ast":null,"code":"var _jsxFileName = \"/home/miska924/workspace/hse/front/REACT/task1/src/App.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.module.scss\";\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { connect } from 'react-redux';\nconst cx = classnames.bind(styles);\nconst defaultState = {\n  tasks: [],\n  task: {\n    id: 1,\n    name: 'Task Name',\n    description: 'Task Description',\n    priority: 123\n  }\n};\n\nconst cmp = index => {\n  return (a, b) => {\n    if (a[index] > b[index] | a[index] === b[index] & a['id'] > b['id']) {\n      return 1;\n    }\n\n    return -1;\n  };\n};\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD':\n      {\n        return { ...state,\n          tasks: [...state.tasks, { ...state.task,\n            priority: parseInt(state.task.priority)\n          }],\n          task: {\n            id: state.task.id + 1,\n            name: 'Task Name',\n            description: 'Task Description',\n            priority: 123\n          }\n        };\n      }\n\n    case 'SORT':\n      {\n        console.log('ahahah sort');\n        let New = [];\n\n        for (let i = 0; i < state.tasks.length; i++) {\n          New.push(state.tasks[i]);\n        }\n\n        console.log(New);\n        console.log(\"got:\");\n\n        if (action.payload == 'NAME') {\n          New.sort(cmp('name'));\n          console.log(New);\n          return { ...state,\n            tasks: New\n          };\n        } else {\n          New.sort(cmp('priority'));\n          console.log(New);\n          return { ...state,\n            tasks: New\n          };\n        }\n      }\n\n    case 'CHANGE':\n      if (action.payload.field == 'priority') {\n        return { ...state,\n          task: { ...state.task,\n            priority: action.payload.value\n          }\n        };\n      } else if (action.payload.field == 'name') {\n        return { ...state,\n          task: { ...state.task,\n            name: action.payload.value\n          }\n        };\n      } else if (action.payload.field == 'description') {\n        return { ...state,\n          task: { ...state.task,\n            description: action.payload.value\n          }\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst store = createStore(rootReducer);\n\nconst addTask = () => ({\n  type: 'ADD'\n});\n\nconst sort = id => ({\n  type: 'SORT',\n  payload: id\n});\n\nconst change = (field, value) => ({\n  type: 'CHANGE',\n  payload: {\n    field: field,\n    value: value\n  }\n});\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    tasks: state.tasks,\n    task: state.task\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatcherADD: task => {\n      return dispatch(addTask(task));\n    },\n    dispatcherSORT: id => {\n      return dispatch(sort(id));\n    },\n    dispatcherCHANGE: (field, value) => {\n      return dispatch(change(field, value));\n    }\n  };\n};\n\nclass MainComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChangeName = event => {\n      const newName = event.target.value;\n      this.props.dispatcherCHANGE('name', newName);\n    };\n\n    this.handleChangeDescription = event => {\n      const newDescription = event.target.value;\n      this.props.dispatcherCHANGE('description', newDescription);\n    };\n\n    this.handleChangePriority = event => {\n      const newPriority = event.target.value;\n      this.props.dispatcherCHANGE('priority', newPriority);\n    };\n\n    this.TaskShow = ({\n      task\n    }) => React.createElement(\"div\", {\n      className: cx(\"taskLine\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"taskId\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"#\", task.id), React.createElement(\"div\", {\n      className: cx(\"taskName\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, task.name), React.createElement(\"div\", {\n      className: cx(\"taskDescription\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, task.description), React.createElement(\"div\", {\n      className: cx(\"taskPriority\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, task.priority));\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: cx(\"container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"header\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Task Manager\")), React.createElement(\"div\", {\n      className: cx(\"input\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"boxes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      value: this.props.task.name,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: cx(\"box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Discription\"), React.createElement(\"input\", {\n      value: this.props.task.description,\n      onChange: this.handleChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: cx(\"box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.task.priority,\n      onChange: this.handleChangePriority,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: cx(\"buttons\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: cx(\"button\"),\n      onClick: () => this.props.dispatcherADD(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Add New Task\"))), React.createElement(\"div\", {\n      className: cx(\"buttons\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: cx(\"button\"),\n      onClick: () => {\n        this.props.dispatcherSORT('NAME');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Sort by Name\"), React.createElement(\"button\", {\n      className: cx(\"button\"),\n      onClick: () => {\n        this.props.dispatcherSORT('PRIORITY');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Sort by Priority\")), React.createElement(\"div\", {\n      className: cx(\"content\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.props.tasks.map(task => this.TaskShow({\n      task\n    }))));\n  }\n\n}\n\nconst WrappedComponent = connect(mapStateToProps, mapDispatchToProps)(MainComponent);\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(WrappedComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/miska924/workspace/hse/front/REACT/task1/src/App.jsx"],"names":["React","classnames","styles","render","Provider","createStore","connect","cx","bind","defaultState","tasks","task","id","name","description","priority","cmp","index","a","b","rootReducer","state","action","type","parseInt","console","log","New","i","length","push","payload","sort","field","value","store","addTask","change","mapStateToProps","mapDispatchToProps","dispatch","dispatcherADD","dispatcherSORT","dispatcherCHANGE","MainComponent","Component","handleChangeName","event","newName","target","props","handleChangeDescription","newDescription","handleChangePriority","newPriority","TaskShow","map","WrappedComponent","App"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.module.scss\";\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { connect } from 'react-redux'\n\nconst cx = classnames.bind(styles);\n\nconst defaultState = {\n  tasks: [],\n  task: {\n    id: 1,\n    name: 'Task Name',\n    description: 'Task Description',\n    priority: 123\n  }\n};\n\nconst cmp = (index) => {\n  return (a, b) => {\n    if (a[index] > b[index] | (a[index]===b[index] & a['id'] > b['id'])) {\n      return 1;\n    }\n    return -1;\n  }\n}\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD': {\n      return {\n        ...state,\n        tasks: [...state.tasks, {...state.task, priority: parseInt(state.task.priority)}],\n        task: {\n          id: state.task.id + 1,\n          name: 'Task Name',\n          description: 'Task Description',\n          priority: 123\n        }\n      };\n    }\n    case 'SORT': {\n      console.log('ahahah sort');\n      let New = [];\n      for (let i = 0; i < state.tasks.length; i++) {\n        New.push(state.tasks[i]);\n      }\n      console.log(New);\n      console.log(\"got:\")\n      if (action.payload == 'NAME') {\n        New.sort(cmp('name'));\n        console.log(New);\n        return {\n          ...state,\n          tasks: New\n        };\n      } else {\n        New.sort(cmp('priority'));\n        console.log(New);\n        return {\n          ...state,\n          tasks: New\n        };\n      }\n    }\n    case 'CHANGE':\n      if (action.payload.field == 'priority') {\n        return {\n          ...state,\n          task: {\n            ...state.task,\n            priority: action.payload.value\n          }\n        }\n      } else if (action.payload.field == 'name') {\n        return {\n          ...state,\n          task: {\n            ...state.task,\n            name: action.payload.value\n          }\n        }\n      } else if (action.payload.field == 'description') {\n        return {\n          ...state,\n          task: {\n            ...state.task,\n            description: action.payload.value\n          }\n        }\n      }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst store = createStore(rootReducer);\n\nconst addTask = () => ({\n  type: 'ADD',\n});\n\nconst sort = (id) => ({\n  type: 'SORT',\n  payload: id\n});\n\nconst change = (field, value) => ({\n  type: 'CHANGE',\n  payload: {field: field, value: value}\n});\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return ({tasks: state.tasks, task: state.task});\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatcherADD: (task) => {return dispatch(addTask(task))},\n    dispatcherSORT: (id) => {return dispatch(sort(id))},\n    dispatcherCHANGE: (field, value) => {return dispatch(change(field, value))}\n  }\n}\n\nclass MainComponent extends React.Component {\n\n  handleChangeName = (event) => {\n    const newName = event.target.value;\n    this.props.dispatcherCHANGE('name', newName);\n  };\n\n  handleChangeDescription = (event) => {\n    const newDescription = event.target.value;\n    this.props.dispatcherCHANGE('description', newDescription);\n  };\n\n  handleChangePriority = (event) => {\n    const newPriority = event.target.value;\n    this.props.dispatcherCHANGE('priority', newPriority);\n  };\n\n  TaskShow = ({ task }) => (\n    <div className={cx(\"taskLine\")}>\n      <div className={cx(\"taskId\")}>\n        #{task.id}\n      </div>\n      <div className={cx(\"taskName\")}>\n        {task.name}\n      </div>\n      <div className={cx(\"taskDescription\")}>\n        {task.description}\n      </div>\n      <div className={cx(\"taskPriority\")}>\n        {task.priority}\n      </div>\n    </div>\n  );\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return (\n      <div className={cx(\"container\")}>\n        <div className={cx(\"header\")}>\n          <h1>Task Manager</h1>\n        </div>\n        <div className={cx(\"input\")}>\n          <div className={cx(\"boxes\")}>\n            <div className={cx(\"box\")}>\n              <h2>Name</h2>\n              <input value={this.props.task.name} onChange={this.handleChangeName}/>\n            </div>\n            <div className={cx(\"box\")}>\n              <h2>Discription</h2>\n              <input value={this.props.task.description} onChange={this.handleChangeDescription}/>\n            </div>\n            <div className={cx(\"box\")}>\n              <h2>Priority</h2>\n              <input type=\"text\" value={this.props.task.priority} onChange={this.handleChangePriority}/>\n            </div>\n          </div>\n          <div className={cx(\"buttons\")}>\n            <button className={cx(\"button\")} onClick={() => this.props.dispatcherADD()}>Add New Task</button>\n          </div>\n        </div>\n        <div className={cx(\"buttons\")}>\n            <button className={cx(\"button\")} onClick={() => {this.props.dispatcherSORT('NAME')}}>Sort by Name</button>\n            <button className={cx(\"button\")} onClick={() => {this.props.dispatcherSORT('PRIORITY')}}>Sort by Priority</button>\n        </div>\n        <div className={cx(\"content\")}>\n          {\n              this.props.tasks.map(task => this.TaskShow({task}))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedComponent = connect(mapStateToProps, mapDispatchToProps)(MainComponent);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <WrappedComponent />\n      </Provider>\n    );\n  }\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}