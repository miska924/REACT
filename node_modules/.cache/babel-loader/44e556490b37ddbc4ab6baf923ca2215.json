{"ast":null,"code":"var _jsxFileName = \"/home/miska924/workspace/hse/front/REACT/task1/src/App.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.module.scss\";\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { connect } from 'react-redux';\nconst cx = classnames.bind(styles);\nconst defaultState = {\n  tasks: []\n};\n\nconst cmp = index => {\n  return (a, b) => {\n    if (a[index] > b[index]) {\n      return 1;\n    }\n\n    return -1;\n  };\n};\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD':\n      {\n        return state => state.tasks.push(action.payload);\n      }\n\n    case 'SORT':\n      {\n        if (state.payload == 'NAME') {\n          return state => this.state.tasks.sort(this.cmp('name'));\n        } else {\n          return state => this.state.tasks.sort(this.cmp('priority'));\n        }\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst store = createStore(rootReducer);\n\nconst addTask = task => ({\n  type: 'ADD',\n  payload: task\n});\n\nconst sort = id => ({\n  type: 'SORT',\n  payload: id // 'PRIORITY' or 'NAME'\n\n});\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MainComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = store => ({\n  tasks: store.tasks\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatcherADD: task => {\n      return dispatch(addTask(task));\n    },\n    dispatcherSORT: id => {\n      return dispatch(sort(id));\n    }\n  };\n};\n\nclass MainComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 1,\n      name: 'Task name',\n      description: 'Task description',\n      priority: 123\n    };\n\n    this.handleChangeName = event => {\n      const newName = event.target.value;\n      this.setState(state => ({\n        name: newName\n      }));\n    };\n\n    this.handleChangeDescription = event => {\n      const newDescription = event.target.value;\n      this.setState(state => ({\n        description: newDescription\n      }));\n    };\n\n    this.handleChangePriority = event => {\n      const newPriority = event.target.value;\n      this.setState(state => ({\n        priority: parseInt(newPriority)\n      }));\n    };\n\n    this.NewTask = () => {\n      this.setState(state => ({\n        id: state.id + 1\n      }));\n      const newTask = {\n        id: this.state.id,\n        name: this.state.name,\n        description: this.state.description,\n        priority: this.state.priority\n      };\n      return newTask;\n    };\n\n    this.TaskShow = ({\n      task\n    }) => React.createElement(\"div\", {\n      className: cx(\"taskLine\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"taskId\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"#\", task.id), React.createElement(\"div\", {\n      className: cx(\"taskName\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, task.name), React.createElement(\"div\", {\n      className: cx(\"taskDescription\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, task.description), React.createElement(\"div\", {\n      className: cx(\"taskPriority\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, task.priority));\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: cx(\"container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"header\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Task Manager\")), React.createElement(\"div\", {\n      className: cx(\"input\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"boxes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx(\"box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: cx(\"box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Discription\"), React.createElement(\"input\", {\n      onChange: this.handleChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: cx(\"box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"input\", {\n      onChange: this.handleChangePriority,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: cx(\"buttons\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: cx(\"button\"),\n      onClick: () => this.props.dispatcherADD(this.NewTask),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Add New Task\"))), React.createElement(\"div\", {\n      className: cx(\"buttons\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: cx(\"button\"),\n      onClick: () => this.props.dispatcherSORT('NAME'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Sort by Name\"), React.createElement(\"button\", {\n      className: cx(\"button\"),\n      onClick: () => this.props.dispatcherSORT('PRIORITY'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Sort by Priority\")), React.createElement(\"div\", {\n      className: cx(\"content\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.tasks.map(task => this.TaskShow(task))));\n  }\n\n}\n\nconnect(mapStateToProps, mapDispatchToProps)(MainComponent);\nexport default App;","map":{"version":3,"sources":["/home/miska924/workspace/hse/front/REACT/task1/src/App.jsx"],"names":["React","classnames","styles","render","Provider","createStore","connect","cx","bind","defaultState","tasks","cmp","index","a","b","rootReducer","state","action","type","push","payload","sort","store","addTask","task","id","App","Component","mapStateToProps","mapDispatchToProps","dispatch","dispatcherADD","dispatcherSORT","MainComponent","name","description","priority","handleChangeName","event","newName","target","value","setState","handleChangeDescription","newDescription","handleChangePriority","newPriority","parseInt","NewTask","newTask","TaskShow","console","log","props","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.module.scss\";\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { connect } from 'react-redux'\n\nconst cx = classnames.bind(styles);\n\nconst defaultState = {\n  tasks: []\n};\n\nconst cmp = (index) => {\n  return (a, b) => {\n    if (a[index] > b[index]) {\n      return 1;\n    }\n    return -1;\n  }\n}\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD': {\n      return state => (state.tasks.push(action.payload));\n    }\n    case 'SORT': {\n      if (state.payload == 'NAME') {\n        return state => this.state.tasks.sort(this.cmp('name'))\n      } else {\n        return state => this.state.tasks.sort(this.cmp('priority'))\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst store = createStore(rootReducer);\n\nconst addTask = (task) => ({\n  type: 'ADD',\n  payload: task\n});\n\nconst sort = (id) => ({\n  type: 'SORT',\n  payload: id // 'PRIORITY' or 'NAME'\n});\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainComponent />\n      </Provider>\n    );\n  }\n};\n\nconst mapStateToProps = store => ({\n  tasks: store.tasks\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatcherADD: (task) => {return dispatch(addTask(task))},\n    dispatcherSORT: (id) => {return dispatch(sort(id))}\n  }\n}\n\nclass MainComponent extends React.Component {\n  state = {\n    id: 1,\n    name: 'Task name',\n    description: 'Task description',\n    priority: 123\n  };\n\n  handleChangeName = (event) => {\n    const newName = event.target.value;\n    this.setState(state => ({ name: newName }));\n  };\n\n  handleChangeDescription = (event) => {\n    const newDescription = event.target.value;\n    this.setState(state => ({ description: newDescription }));\n  };\n\n  handleChangePriority = (event) => {\n    const newPriority = event.target.value;\n    this.setState(state => ({ priority: parseInt(newPriority) }));\n  };\n\n  NewTask = () => {\n    this.setState(state => ({ id: state.id + 1 }));\n    const newTask = {\n      id: this.state.id,\n      name: this.state.name,\n      description: this.state.description,\n      priority: this.state.priority\n    }\n    return newTask;\n  };\n\n  TaskShow = ({ task }) => (\n    <div className={cx(\"taskLine\")}>\n      <div className={cx(\"taskId\")}>\n        #{task.id}\n      </div>\n      <div className={cx(\"taskName\")}>\n        {task.name}\n      </div>\n      <div className={cx(\"taskDescription\")}>\n        {task.description}\n      </div>\n      <div className={cx(\"taskPriority\")}>\n        {task.priority}\n      </div>\n    </div>\n  );\n  render() {\n    console.log(this.state);\n    return (\n      <div className={cx(\"container\")}>\n        <div className={cx(\"header\")}>\n          <h1>Task Manager</h1>\n        </div>\n        <div className={cx(\"input\")}>\n          <div className={cx(\"boxes\")}>\n            <div className={cx(\"box\")}>\n              <h2>Name</h2>\n              <input onChange={this.handleChangeName}/>\n            </div>\n            <div className={cx(\"box\")}>\n              <h2>Discription</h2>\n              <input onChange={this.handleChangeDescription}/>\n            </div>\n            <div className={cx(\"box\")}>\n              <h2>Priority</h2>\n              <input onChange={this.handleChangePriority}/>\n            </div>\n          </div>\n          <div className={cx(\"buttons\")}>\n            <button className={cx(\"button\")} onClick={() => this.props.dispatcherADD(this.NewTask)}>Add New Task</button>\n          </div>\n        </div>\n        <div className={cx(\"buttons\")}>\n            <button className={cx(\"button\")} onClick={() => this.props.dispatcherSORT('NAME')}>Sort by Name</button>\n            <button className={cx(\"button\")} onClick={() => this.props.dispatcherSORT('PRIORITY')}>Sort by Priority</button>\n        </div>\n        <div className={cx(\"content\")}>\n          {this.props.tasks.map(task => this.TaskShow(task))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconnect(mapStateToProps, mapDispatchToProps)(MainComponent);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}