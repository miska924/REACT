{"ast":null,"code":"var _jsxFileName = \"/home/miska924/workspace/hse/front/REACT/task1/src/App.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.module.scss\";\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { connect } from 'react-redux';\nconst cx = classnames.bind(styles);\nconst defaultState = [];\n\nconst cmp = index => {\n  return (a, b) => {\n    if (a[index] > b[index]) {\n      return 1;\n    }\n\n    return -1;\n  };\n};\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD':\n      {\n        return state => state.push(action.payload);\n      }\n\n    case 'SORT':\n      {\n        if (state.payload == 'NAME') {\n          return state => this.state.sort(this.cmp('name'));\n        } else {\n          return state => this.state.sort(this.cmp('priority'));\n        }\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst store = createStore(rootReducer);\n\nconst addTask = task => ({\n  type: 'ADD',\n  payload: task\n});\n\nconst sort = id => ({\n  type: 'SORT',\n  payload: id // 'PRIORITY' or 'NAME'\n\n});\n\nconst App = () => React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(MainComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}));\n\nconst mapStateToProps = store => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatcherADD: task => dispatch(addTask(task)),\n  dispatcherSORT: id => dispatch(sort(id))\n});\n\nconst MainComponent = ({\n  dispatcherADD,\n  dispatcherSORT\n}) => {\n  var _temp;\n\n  return _temp = class {\n    constructor() {\n      this.state = {\n        id: 1,\n        name: 'Task name',\n        description: 'Task description',\n        priority: 123\n      };\n\n      this.handleChangeName = event => {\n        const newName = event.target.value;\n        this.setState(state => ({\n          name: newName\n        }));\n      };\n\n      this.handleChangeDescription = event => {\n        const newDescription = event.target.value;\n        this.setState(state => ({\n          description: newDescription\n        }));\n      };\n\n      this.handleChangePriority = event => {\n        const newPriority = event.target.value;\n        this.setState(state => ({\n          priority: parseInt(newPriority)\n        }));\n      };\n\n      this.NewTask = () => {\n        this.setState(state => ({\n          id: state.id + 1\n        }));\n        const newTask = {\n          id: this.state.id,\n          name: this.state.name,\n          description: this.state.description,\n          priority: this.state.priority\n        };\n        return newTask;\n      };\n\n      this.TaskShow = ({\n        task\n      }) => React.createElement(\"div\", {\n        className: cx(\"taskLine\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cx(\"taskId\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"#\", task.id), React.createElement(\"div\", {\n        className: cx(\"taskName\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, task.name), React.createElement(\"div\", {\n        className: cx(\"taskDescription\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, task.description), React.createElement(\"div\", {\n        className: cx(\"taskPriority\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, task.priority));\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        className: cx(\"container\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cx(\"header\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Task Manager\")), React.createElement(\"div\", {\n        className: cx(\"input\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cx(\"boxes\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cx(\"box\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        onChange: this.handleChangeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: cx(\"box\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Discription\"), React.createElement(\"input\", {\n        onChange: this.handleChangeDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: cx(\"box\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Priority\"), React.createElement(\"input\", {\n        onChange: this.handleChangePriority,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: cx(\"buttons\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: cx(\"button\"),\n        onClick: () => dispatcherADD(this.NewTask),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Add New Task\"))), React.createElement(\"div\", {\n        className: cx(\"buttons\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: cx(\"button\"),\n        onClick: () => dispatcherSORT('NAME'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Sort by Name\"), React.createElement(\"button\", {\n        className: cx(\"button\"),\n        onClick: () => dispatcherSORT('PRIORITY'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Sort by Priority\")), React.createElement(\"div\", {\n        className: cx(\"content\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.tasks.map(task => this.TaskShow({\n        task\n      }))));\n    }\n\n  }, _temp;\n};\n\nconnect(mapStateToProps, mapDispatchToProps)(MainComponent);\nexport default App;","map":{"version":3,"sources":["/home/miska924/workspace/hse/front/REACT/task1/src/App.jsx"],"names":["React","classnames","styles","render","Provider","createStore","connect","cx","bind","defaultState","cmp","index","a","b","rootReducer","state","action","type","push","payload","sort","store","addTask","task","id","App","mapStateToProps","mapDispatchToProps","dispatch","dispatcherADD","dispatcherSORT","MainComponent","name","description","priority","handleChangeName","event","newName","target","value","setState","handleChangeDescription","newDescription","handleChangePriority","newPriority","parseInt","NewTask","newTask","TaskShow","tasks","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./App.module.scss\";\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { connect } from 'react-redux'\n\nconst cx = classnames.bind(styles);\n\nconst defaultState = [];\n\nconst cmp = (index) => {\n  return (a, b) => {\n    if (a[index] > b[index]) {\n      return 1;\n    }\n    return -1;\n  }\n}\n\nconst rootReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD': {\n      return state => (state.push(action.payload));\n    }\n    case 'SORT': {\n      if (state.payload == 'NAME') {\n        return state => this.state.sort(this.cmp('name'))\n      } else {\n        return state => this.state.sort(this.cmp('priority'))\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst store = createStore(rootReducer);\n\nconst addTask = (task) => ({\n  type: 'ADD',\n  payload: task\n});\n\nconst sort = (id) => ({\n  type: 'SORT',\n  payload: id // 'PRIORITY' or 'NAME'\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <MainComponent />\n  </Provider>\n);\n\nconst mapStateToProps = store => ({ });\n\nconst mapDispatchToProps = dispatch => ({\n  dispatcherADD: (task) => dispatch(addTask(task)),\n  dispatcherSORT: (id) => dispatch(sort(id))\n});\n\nconst MainComponent = ({ dispatcherADD, dispatcherSORT }) => class {\n  state = {\n    id: 1,\n    name: 'Task name',\n    description: 'Task description',\n    priority: 123\n  };\n\n  handleChangeName = (event) => {\n    const newName = event.target.value;\n    this.setState(state => ({ name: newName }));\n  };\n\n  handleChangeDescription = (event) => {\n    const newDescription = event.target.value;\n    this.setState(state => ({ description: newDescription }));\n  };\n\n  handleChangePriority = (event) => {\n    const newPriority = event.target.value;\n    this.setState(state => ({ priority: parseInt(newPriority) }));\n  };\n\n  NewTask = () => {\n    this.setState(state => ({ id: state.id + 1 }));\n    const newTask = {\n      id: this.state.id,\n      name: this.state.name,\n      description: this.state.description,\n      priority: this.state.priority\n    }\n    return newTask;\n  };\n\n  TaskShow = ({ task }) => (\n    <div className={cx(\"taskLine\")}>\n      <div className={cx(\"taskId\")}>\n        #{task.id}\n      </div>\n      <div className={cx(\"taskName\")}>\n        {task.name}\n      </div>\n      <div className={cx(\"taskDescription\")}>\n        {task.description}\n      </div>\n      <div className={cx(\"taskPriority\")}>\n        {task.priority}\n      </div>\n    </div>\n  );\n  render() {\n  return (\n    <div className={cx(\"container\")}>\n      <div className={cx(\"header\")}>\n        <h1>Task Manager</h1>\n      </div>\n      <div className={cx(\"input\")}>\n        <div className={cx(\"boxes\")}>\n          <div className={cx(\"box\")}>\n            <h2>Name</h2>\n            <input onChange={this.handleChangeName}/>\n          </div>\n          <div className={cx(\"box\")}>\n            <h2>Discription</h2>\n            <input onChange={this.handleChangeDescription}/>\n          </div>\n          <div className={cx(\"box\")}>\n            <h2>Priority</h2>\n            <input onChange={this.handleChangePriority}/>\n          </div>\n        </div>\n        <div className={cx(\"buttons\")}>\n          <button className={cx(\"button\")} onClick={() => dispatcherADD(this.NewTask)}>Add New Task</button>\n        </div>\n      </div>\n      <div className={cx(\"buttons\")}>\n          <button className={cx(\"button\")} onClick={() => dispatcherSORT('NAME')}>Sort by Name</button>\n          <button className={cx(\"button\")} onClick={() => dispatcherSORT('PRIORITY')}>Sort by Priority</button>\n      </div>\n      <div className={cx(\"content\")}>\n        {this.state.tasks.map(task => this.TaskShow({task}))}\n      </div>\n    </div>\n  );\n  }\n}\n\n\nconnect(mapStateToProps, mapDispatchToProps)(MainComponent);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}